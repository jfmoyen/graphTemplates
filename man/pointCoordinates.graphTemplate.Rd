% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphTemplate_mixedMethods.R
\name{pointCoordinates}
\alias{pointCoordinates}
\alias{pointCoordinates.graphTemplate}
\alias{pointCoordinates.binary}
\alias{pointCoordinates.ternary}
\title{Calculate the plotting coordinates of data points in a graphTemplate}
\usage{
pointCoordinates(
  self,
  dataTbl = NULL,
  wrdata = WR,
  lbl = get("labels", .GlobalEnv),
  mode = "GCDkit"
)

\method{pointCoordinates}{graphTemplate}(
  self,
  dataTbl = NULL,
  wrdata = WR,
  lbl = get("labels", .GlobalEnv),
  mode = "GCDkit"
)

\method{pointCoordinates}{binary}(
  self,
  dataTbl = NULL,
  wrdata = WR,
  lbl = get("labels", .GlobalEnv),
  mode = "GCDkit"
)

\method{pointCoordinates}{ternary}(
  self,
  dataTbl = NULL,
  wrdata = WR,
  lbl = get("labels", .GlobalEnv),
  mode = "GCDkit"
)
}
\arguments{
\item{self}{A graphTemplate}

\item{dataTbl}{A tibble containing data to plot (both WR and labels)}

\item{wrdata}{a MATRIX containing WR analyses, as per GCDkit's convention.
Probably WR (a global variable) in GCDkit context.}

\item{lbl}{a data.frame containing labels, as per GCDkit's convention.
Probably labels (a global variable) in GCDkit context.}

\item{mode}{Either "GCDkit" or "ggplot". How to calculate the new coordinates -
in GCDkit context use calcCore, in ggplot use mutate.}
}
\value{
A list with three components: plottingCoords (two-columns data.frame, x and y)
and lbl (labels, filtered from the input data) are always present. tbl (a tibble, containing
both) is NULL if mode="GCDkit" and contains both previous tables, merged, if mode="ggplot"
}
\description{
Calculate the plotting coordinates of data points in a graphTemplate
}
\details{
Graph templates include the definitons of axes and, if appropriate,
some transformation; for instance, data can be first transformed (e.g. CIPW norm)
and the plotted in a ternary diagram, with x and y being functions of the apices.
This function returns the plotting coordinates of its argument.

Some graph templates also require certain conditions to be fullfilled, for
instance plotting only samples with SiO2 < 54 \%. Filtering is also done here based
on the template.

A filtered versions of the labels is also returned, preserving the information
(notably col and pch) only for the samples that are "allowed" in this diagram.
If you don't want data filtering, the easiest is to edit the template before plotting:
self$filtering <- NULL.

Filtering is done using GCDkit's selectSubset, and coordinates come from
GCDkit::calcCore.

pointCoordinates is called by plotFigaro, but it can also be used on it own to
add points to an existing graph...
}
